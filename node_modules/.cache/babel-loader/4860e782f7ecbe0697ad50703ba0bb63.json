{"ast":null,"code":"var _jsxFileName = \"/home/arnaud/Desktop/dev/PortfolioReact/src/context.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\nconst initialState = {\n  darkmode: true\n};\n\nconst themeReducer = (state, action) => {\n  switch (action.type) {\n    case \"TOGGLE\":\n      return {\n        darkmode: !state.darkmode\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const ThemeProvider = props => {\n  _s();\n\n  const [state, dispatch] = useReducer(themeReducer, initialState);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    value: (state, dispatch),\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ThemeProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ThemeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"sources":["/home/arnaud/Desktop/dev/PortfolioReact/src/context.js"],"names":["createContext","useReducer","ThemeContext","initialState","darkmode","themeReducer","state","action","type","ThemeProvider","props","dispatch","children"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;;AAEA,OAAO,MAAMC,YAAY,gBAAGF,aAAa,EAAlC;AAEP,MAAMG,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AADS,CAArB;;AAIA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,QAAL;AACE,aAAO;AAAEJ,QAAAA,QAAQ,EAAE,CAACE,KAAK,CAACF;AAAnB,OAAP;;AACA;AACE,aAAOE,KAAP;AAJN;AAMD,CAPD;;AASA,OAAO,MAAMG,aAAa,GAAIC,KAAD,IAAW;AAAA;;AACtC,QAAM,CAACJ,KAAD,EAAQK,QAAR,IAAoBV,UAAU,CAACI,YAAD,EAAeF,YAAf,CAApC;AAEA,sBACE,QAAC,aAAD;AAAe,IAAA,KAAK,GAAGG,KAAK,EAAEK,QAAV,CAApB;AAAA,cACGD,KAAK,CAACE;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CARM;;GAAMH,a;;KAAAA,a","sourcesContent":["import { createContext, useReducer } from \"react\";\n\nexport const ThemeContext = createContext();\n\nconst initialState = {\n  darkmode: true\n}\n\nconst themeReducer = (state, action) => {\n  switch(action.type) {\n    case \"TOGGLE\":\n      return { darkmode: !state.darkmode };\n      default:\n        return state;\n  }\n}\n\nexport const ThemeProvider = (props) => {\n  const [state, dispatch] = useReducer(themeReducer, initialState)\n\n  return (\n    <ThemeProvider value={(state, dispatch)}>\n      {props.children}\n    </ThemeProvider>\n  )\n}"]},"metadata":{},"sourceType":"module"}