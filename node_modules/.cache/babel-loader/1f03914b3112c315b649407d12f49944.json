{"ast":null,"code":"var _jsxFileName = \"/home/arnaud/Desktop/dev/Portfolio/portfolio-project/portfolio-react/src/components/Contact.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { init } from 'emailjs-com';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ninit(\"user_j0DBFik1bsTzzxgRJJoNa\");\n\nconst ContactMe = () => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const isEmail = () => {\n    let mail = document.getElementById('not-mail');\n    let regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n\n    if (email.match(regex)) {\n      mail.style.display = 'none';\n      return true;\n    } else {\n      mail.style.display = 'block';\n      mail.style.animation = 'dongle 1s';\n      setTimeout(() => {\n        mail.style.animation = 'none';\n      }, 2000);\n      return false;\n    }\n  };\n\n  const failMessage = () => {\n    let formMess = document.querySelector('.form-message');\n    formMess.innerHTML = 'Please full fill require fields *';\n    formMess.style.opacity = '1';\n    formMess.style.background = 'rgb(253,87,87)';\n    document.getElementById('name').classList.add('error');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (name && isEmail() && message) {\n      sendFeedback(\"template_d9wvswt\", {\n        name,\n        company,\n        phone,\n        email,\n        message\n      });\n    } else {\n      failMessage();\n    }\n  };\n\n  const sendFeedback = (templateId, variables) => {\n    window.emailjs.send(\"gmail\", templateId, variables).then(res => {\n      console.log('success !');\n      alert(\"Success, your message has been send\");\n      setName(\"\");\n      setCompany(\"\");\n      setPhone(\"\");\n      setEmail(\"\");\n      setMessage(\"\");\n    }).catch(err => document.querySelector('.form-message').innerHTML = \"An error occurs, please try again.\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"contactId\",\n    className: \"contact-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"CONTACT :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        onChange: e => setName(e.target.value),\n        placeholder: \"name *\",\n        value: name,\n        autoComplete: \"off\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"company\",\n        name: \"company\",\n        onChange: e => setCompany(e.target.value),\n        placeholder: \"company\",\n        value: company\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"phone\",\n        name: \"phone\",\n        onChange: e => setPhone(e.target.value),\n        placeholder: \"phone\",\n        value: phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"email-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"not-mail\",\n          children: \"Non valid email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"mail\",\n          id: \"email\",\n          name: \"email\",\n          onChange: e => setEmail(e.target.value),\n          placeholder: \"email *\",\n          value: email,\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"message\",\n        name: \"message\",\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"message *\",\n        value: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"button\",\n      type: \"button\",\n      value: \"Send\",\n      onClick: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactMe, \"1pVA72sFZnUE5LEts5t8y9amonU=\");\n\n_c = ContactMe;\nexport default ContactMe;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactMe\");","map":{"version":3,"sources":["/home/arnaud/Desktop/dev/Portfolio/portfolio-project/portfolio-react/src/components/Contact.js"],"names":["React","init","useState","ContactMe","name","setName","company","setCompany","phone","setPhone","email","setEmail","message","setMessage","isEmail","mail","document","getElementById","regex","match","style","display","animation","setTimeout","failMessage","formMess","querySelector","innerHTML","opacity","background","classList","add","handleSubmit","e","preventDefault","sendFeedback","templateId","variables","window","emailjs","send","then","res","console","log","alert","catch","err","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport{ init } from 'emailjs-com';\nimport { useState } from \"react\";\n\ninit(\"user_j0DBFik1bsTzzxgRJJoNa\");\n\n\nconst ContactMe = () => {\n  const [name, setName] = useState(\"\");\n  const [company, setCompany] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const isEmail = () => {\n      let mail = document.getElementById('not-mail');\n      let regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n\n      if (email.match(regex)) {\n        mail.style.display = 'none'\n        return true;\n      } else {\n        mail.style.display = 'block'\n        mail.style.animation = 'dongle 1s'\n        setTimeout(() => {\n          mail.style.animation = 'none'\n        }, 2000);\n        return false;\n      }\n  }\n\n  const failMessage = () => {\n    let formMess = document.querySelector('.form-message')\n    formMess.innerHTML = 'Please full fill require fields *'\n    formMess.style.opacity = '1'\n    formMess.style.background = 'rgb(253,87,87)';\n\n    document.getElementById('name').classList.add('error')\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (name && isEmail() && message) {\n    sendFeedback(\"template_d9wvswt\", {\n      name,\n      company,\n      phone,\n      email,\n      message,\n    });\n  } else {\n    failMessage();\n  }\n  };\n\n\n    const sendFeedback = (templateId, variables) => {\n\n    window.emailjs\n      .send(\"gmail\", templateId, variables)\n      .then((res) => {\n        console.log('success !');\n        alert(\"Success, your message has been send\")\n        setName(\"\");\n        setCompany(\"\");\n        setPhone(\"\");\n        setEmail(\"\");\n        setMessage(\"\");\n      })\n      .catch(\n        (err) =>\n          document.querySelector('.form-message').innerHTML =\n            \"An error occurs, please try again.\")\n  };\n\n  return (\n    <form id=\"contactId\"className=\"contact-form\">\n      <h2>CONTACT :</h2>\n      <div className=\"form-content\">\n        <input\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          onChange={(e) => setName(e.target.value)}\n          placeholder=\"name *\"\n          value={name}\n          autoComplete=\"off\"\n        />\n        <input\n          type=\"text\"\n          id=\"company\"\n          name=\"company\"\n          onChange={(e) => setCompany(e.target.value)}\n          placeholder=\"company\"\n          value={company}\n        />\n        <input\n          type=\"text\"\n          id=\"phone\"\n          name=\"phone\"\n          onChange={(e) => setPhone(e.target.value)}\n          placeholder=\"phone\"\n          value={phone}\n        />\n        <div className=\"email-content\">\n          <label id=\"not-mail\">Non valid email</label>\n          <input\n            type=\"mail\"\n            id=\"email\"\n            name=\"email\"\n            onChange={(e) => setEmail(e.target.value)}\n            placeholder=\"email *\"\n            value={email}\n            autoComplete=\"off\"\n          />\n        </div>\n        <textarea\n          id=\"message\"\n          name=\"message\"\n          onChange={(e) => setMessage(e.target.value)}\n          placeholder=\"message *\"\n          value={message}\n        />\n      </div>\n      <input\n        className=\"button\"\n        type=\"button\"\n        value=\"Send\"\n        onClick={handleSubmit}\n      />\n      <div className=\"form-message\"></div>\n    </form>\n  );\n};\n\nexport default ContactMe;"]},"metadata":{},"sourceType":"module"}